<template>
  <div class="CusotmSwiper">
    <div class="swiper">
      <div class="swiper-wrapper"></div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref, onMounted, computed } from 'vue';
import { useRouter, useRoute } from 'vue-router';
import Swiper from 'swiper';

import { getChapterRespose } from '@/service/model/comic';
import ImgCard from './ImgCard.vue';

const props = withDefaults(
  defineProps<{
    list: getChapterRespose[];
    activeIndex?: number;
  }>(),
  {
    list: () => [],
    activeIndex: 0
  }
);

const emit = defineEmits(['swiperChange']);

const virtualData = ref<getChapterRespose[]>([]);

const onSlideChange = (swiper: any) => {
  // activeIndex.value = swiper.activeIndex;
//   mySwiper.value = swiper;
//   console.log(swiper);
//   emit('swiperChange', swiper.activeIndex, swiper.virtual.slides[swiper.activeIndex].props);
};

const appendSlide = (list: []) => {
  console.log('appendSlide');
};
const prependSlide = (list: []) => {
  console.log('prependSlide');
};

onMounted(() => {
  virtualData.value = JSON.parse(JSON.stringify(props.list));


  new Swiper('.swiper', {
  virtual: {
    // slides: JSON.parse(JSON.stringify(props.list)),
    addSlidesAfter: 5,
    addSlidesBefore: 5,
  },
});
});
// defineExpose({ appendSlide, prependSlide });
</script>



<style lang="less" scope>
.CusotmSwiper {
  height: 100%;
  overflow: hidden;
  .swiper {
    height: 100%;
  }
}
</style>
